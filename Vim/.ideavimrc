" https://github.com/JetBrains/ideavim
let mapleader=" "
"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
map <leader>9  :action IdeaVim.ReloadVimRc.reload<CR>

"" -- Vim Setting --
set scrolloff=5
set incsearch
set hlsearch
nmap <leader>sc :noh<CR>
set ignorecase
set smartcase
set clipboard+=unnamed  " use the clipboards of vim and win
" Don't use Ex mode, use Q for formatting.
map Q gq

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" -- VIM PLUGINS -- """""""""""""""""""""""""""""""""""""""""""""
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set ideajoin
set highlightedyank

" PLUGIN
set ReplaceWithRegister
" gr doPaste

"" PLUGIN
set exchange
" X   Visual mode.On the first use, define the first {motion} to exchange. On the second use, define the second {motion} and perform the exchange.
" cxc Clear any {motion} pending for exchange.

"" PLUGIN
set surround
vmap " S"
vmap ' S'
" cs + old + new
" ds + tags
" vMode: S + tags

"" PLUGIN
set easymotion
nmap f <Plug>(easymotion-s2)
" <leader><leader> k jump up lines
" <leader><leader> j jump down lines

"" PLUGIN
set NERDTree
" Key	Description
" o		Open files, directories and bookmarks
" i		Open selected file in a split window
" s		Open selected file in a new vsplit
" x		Close the current nodes parent
" X		Recursively close all children of the current node
" P		Jump to the root node
" p		Jump to current nodes parent
" r		Recursively refresh the current directory
" m		Display the NERDTree menu
" q		Close the NERDTree window
" A		Zoom (maximize/minimize) the NERDTree window

"" PLUGIN
set commentary
" gcc switch comment
" gcu uncomment out all

" method comment
map <A-/> i/**<CR>
imap <A-/> /**<CR>

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" -- Basic Mapping -- """""""""""""""""""""""""""""""""""""""""""
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"" -- FOLD --
" zc fold
" C-> toggle fold
" zo open
" zM fold all
" zR open all
map zm zM
map zr zR

"" -- NORMAL MODE --
nmap <leader>p "0p
nmap <A-p> vwp
nmap <C-p> Vp
nmap vv <C-v>

nmap vw viw
nmap yw yiw
nmap cw ciw
nmap dw diw

nmap vb vib
nmap yb yib
nmap cb cib
nmap db dib

nmap vB viB
nmap yB yiB
nmap cB ciB
nmap dB diB

nmap v" vi"
nmap y" yi"
nmap c" ci"
nmap d" di"

nmap v' vi'
nmap y' yi'
nmap c' ci'
nmap d' di'

nmap n nzz
nmap N Nzz

nmap > >>
nmap < <<

nmap Y y$

"" -- VISUAL MODE --
vmap > >gv
vmap < <gv

"" -- VISUAL MODE + NORMAL MODE --
map H ^
map L $

nmap + <C-a>
vmap + g<C-a>
map - <C-x>
vmap - g<C-x>

map J 5j
map K 5k
map gj J
"" -- INSERT MODE --
imap <C-k> <C-o>D<Right>
imap jj <ESC>
imap @@ :action EditorCompleteStatement<CR>

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" -- IDEA ACTION -- """""""""""""""""""""""""""""""""""""""""""
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" DEBUG
map <leader>w :action Debugger.AddToWatch<CR>
map <leader>b :action ToggleLineBreakpoint<CR>
map <leader>B :action Debugger.RemoveAllBreakpoints<CR>
" A-S-f10 run window
" C-S-f10 run class
" S-f10 run
" S-f9 debug
" C-f2 stop

" WINDOW
map <leader><Right> :action SplitVertically<CR>
map <leader><Left> :action MoveEditorToOppositeTabGroup<CR>
map <leader><Down> :action SplitHorizontally<CR>
map <leader>x :action CloseContent<CR>
map <leader>X :action ReopenClosedTab<CR>
map <leader>co :action CloseAllEditorsButActive<CR>
map <leader>ca :action CloseAllEditors<CR>
map <leader>os :action SelectInProjectView<CR>
map <leader>oe :action RevealIn<CR>
map <leader>e :action RecentLocations<CR>

" MULTIPLE-CURSORS
map <A-n> :action SelectNextOccurrence<CR>
imap <A-n> :action SelectNextOccurrence<CR>
map <A-x> :action UnselectPreviousOccurrence<CR>
imap <A-x> :action UnselectPreviousOccurrence<CR>
map <A-w> :action SelectAllOccurrences<CR>
imap <A-w> :action SelectAllOccurrences<CR>
" F3 move to next occurrence
" S-F3 move to previous occurrence

" REFACTOR
map @@ :action ReformatCode<CR>
map mn :action RenameFile<CR>
map me :action RenameElement<CR>
map ms :action ChangeSignature<CR>
map mc :action IntroduceConstant<CR>
map mf :action IntroduceField<CR>
map mp :action IntroduceParameter<CR>
map <A-q> :action IntroduceVariable<CR>
imap <A-q> :action IntroduceVariable<CR>
map <A-g> :action Generate<CR>
imap <A-g> :action Generate<CR>
map <A-s> :action SurroundWith<CR>
imap <A-s> :action SurroundWith<CR>


" FIND FILE & ACTION
map <A-f> :action FindInPath<CR>
imap <A-f> :action FindInPath<CR>
map <A-r> :action ReplaceInPath<CR>
imap <A-r> :action ReplaceInPath<CR>
map <A-a> :action GotoAction<CR>
imap <A-a> :action GotoAction<CR>
map <A-e> :action GotoFile<CR>
imap <A-e> :action GotoFile<CR>
map <A-t> :action GotoTest<CR>
imap <A-t> :action GotoTest<CR>
map <A-c> :action GotoClass<CR>
imap <A-c> :action GotoClass<CR>

map <leader>nc :action NewClass<CR>
map <leader>nd :action NewDir<CR>
map <leader>nf :action NewFile<CR>

" alt+F7 FindUsages
map <leader>ch :action CallHierarchy<CR>
map <leader>gh :action Vcs.ShowTabbedFileHistory<CR>
map <leader>gH :action Vcs.ShowHistoryForBlock<CR>
map <leader>cn :action CopyFileName<CR>
map <leader>cr :action CopyReference<CR>

" Macros
map vm @m
let @m =']MV%(' " select method